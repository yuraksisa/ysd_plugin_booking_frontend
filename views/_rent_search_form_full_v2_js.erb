<script type="text/javascript">

require(['jquery', 'YSDRemoteDataSource', 'YSDMemoryDataSource', 'YSDSelectSelector',
	     'jquery.validate', 'jquery.ui', 'jquery.ui.datepicker-es',
       'jquery.ui.datepicker-en','jquery.ui.datepicker-it','jquery.ui.datepicker-ca',
	     'jquery.ui.datepicker.validation', 'datejs',
	     'bootstrap', 'bootstrap.select'], 
	     function($, RemoteDataSource, MemoryDataSource, SelectSelector) {

  selectorModel = {
      requestLanguage: <% if locale=locale_to_translate_into %>'<%=locale%>'<%else%>null<%end%>,
      minDays   : <%=booking_min_days%>,
      allowCustomPlaces : <%=pickup_return_places_configuration == 'list+custom'%>,
      customPlacePrice: <%=custom_pickup_return_place_price%>,
      pickupReturnPlaces: <%if booking_item_family.pickup_return_place%>true<%else%>false<%end%>,
      pickupReturnPlacesSameRentalLocation: <%= pickup_return_places_same_rental_location %>,
      timeToFrom: <%if booking_item_family.time_to_from%>true<%else%>false<%end%>,
      dataSourcePickupPlaces: null,
      dataSourceReturnPlaces: null,
      returnPlace: null
  };

  selectorController = {

      dateFromChanged: function() {

        var dateFrom = $('#date_from').datepicker('getDate');
        var dateTo = $('#date_from').datepicker('getDate');
        <% if booking_item_family.cycle_of_24_hours %>
        dateTo.setDate(dateFrom.getDate() + selectorModel.minDays);
        <% else %>
          dateTo.setDate(dateFrom.getDate() + (selectorModel.minDays - 1));
        <% end %>

        $('#date_to').datepicker('setDate', dateTo );
        $('#date_to').datepicker('option', 'minDate', dateTo);

      },

      pickupPlaceChanged: function() {

         if (selectorModel.allowCustomPlaces) {
             if ($('#pickup_place').val() == 'other') {
                 $('input[name=custom_pickup_place]').val('true');
                 $('#another_pickup_place_group').show();
             }
             else {
                 $('input[name=custom_pickup_place]').val('false');
                 $('#another_pickup_place_group').hide();
             }
         }

         // Filter the return places to match the pickup places rental location
         if (selectorModel.pickupReturnPlacesSameRentalLocation && selectorModel.dataSourceReturnPlaces != null) {
           var pickupPlace = selectorModel.dataSourcePickupPlaces.data.find(function(element){
              return $('#pickup_place').val() == element.id;
           });
           var returnPlaces = selectorModel.dataSourceReturnPlaces.data.filter(function(element){
             return element.rental_location_code == pickupPlace.rental_location_code
           });
           dataSource = new MemoryDataSource(returnPlaces, {'id':'id',
                                                           'description':function(data) {
                                                               var value = data.name;
                                                               if (data.price && data.price > 0) {
                                                                   value += ' (';
                                                                   value += new Number(data.price).toFixed(2) + '€';
                                                                   value += ')';
                                                               }
                                                               return value;
                                                           }});
           selectorView.setupReturnPlaceSelector(dataSource);
         }

      },

      returnPlaceChanged: function() {

          if (selectorModel.allowCustomPlaces) {
              if ($('#return_place').val() == 'other') {
                  $('input[name=custom_return_place]').val('true');
                  $('#another_return_place_group').show();
              }
              else {
                  $('input[name=custom_return_place]').val('false');
                  $('#another_return_place_group').hide();
              }
          }

      },

      formSearchClick: function() {
        <% if booking_item_family.driver and driver_age_rules and driver_age_rule_definition and !driver_age_rule_definition.driver_age_rules.empty?  %>
        if ($('#driver_age_rule option:selected').attr('allowed') == 'false') {
            alert($('#driver_age_rule option:selected').attr('not-allowed-message'));
            return;
        }
        <% end %>
        $('#formSearchSubmit')[0].form.submit();
      }


  };

  selectorView = {

  	init: function() {

  		this.setupForm();
  		this.setupValidation();
  	  this.setupDateControls();
  	  if (selectorModel.pickupReturnPlaces) {
          this.loadPickupReturnPlaces();
      }
      if (selectorModel.timeToFrom) {
          this.loadPickupReturnTime();
      }

  	},

    setupValidation: function() {

  	    $('form[name=search_form]').validate({
           rules: {
               promotion_code: {
                   remote: {
                       url: '/api/check-promotion-code',
                       type: 'post',
                       data: {
                           code: function() {
                               return $('#promotion_code').val();
                           }
                       }
                   }
               }
           },
           messages: {
               promotion_code: {
                   remote: "<%=t.front_end_reservation.promotion_code_not_valid%>"
               }
           },
           errorClass : 'text-danger'
        });

    },

    setupForm: function() {
  	  $('#formSearchSubmit').bind('click', function(){
  	      if ($('form[name=search_form]').valid())
          {
              selectorController.formSearchClick();
          }
      })
    },

  	setupDateControls: function() {
      
      $.datepicker.setDefaults( $.datepicker.regional["<%=session[:locale] || 'es'%>"] );
      var locale = $.datepicker.regional["<%=session[:locale] || 'es'%>"];

      $('#date_from').datepicker({numberOfMonths:1, 
          minDate: new Date(), 
          maxDate: new Date().add(365).days(), 
          dateFormat: 'dd/mm/yy'},
          locale);
      $('#date_from').datepicker('setDate', '+0'); 

      $('#date_to').datepicker({numberOfMonths:1, 
          minDate: <% if booking_item_family.cycle_of_24_hours %>new Date().add(selectorModel.minDays).days()<%else%>new Date().add(selectorModel.minDays-1).days()<%end%>,
          maxDate: new Date().add(365).days(),
          dateFormat: 'dd/mm/yy'}, locale);
      $('#date_to').datepicker('setDate', <% if booking_item_family.cycle_of_24_hours %>'+'+selectorModel.minDays<%else%>'+'+(selectorModel.minDays-1)<%end%>);

      $('#date_from').bind('change', function() {
           selectorController.dateFromChanged();
         });

  	},

  	loadPickupReturnPlaces: function() {

  	    var pickupPlacesURL = '/api/booking/frontend/pickup-places';
  	    if (selectorModel.requestLanguage != null) {
  	      pickupPlacesURL += '?lang='+selectorModel.requestLanguage;
        }

        selectorModel.dataSourcePickupPlaces = new RemoteDataSource(pickupPlacesURL,
																													{'id':'id',
                                                           'description':function(data) {
                                                               var value = data.name;
                                                               if (data.price && data.price > 0) {
                                                                   value += ' (';
                                                                   value += new Number(data.price).toFixed(2) + '€';
                                                                   value += ')';
                                                               }
                                                               return value;
                                                           }});
        var pickupPlace = new SelectSelector('pickup_place', 
        		selectorModel.dataSourcePickupPlaces, null, false, '',
                function() {
                  if (selectorModel.allowCustomPlaces) {
                      if (selectorModel.customPlacePrice && selectorModel.customPlacePrice != '' && selectorModel.customPlacePrice > 0) {
                          $('#pickup_place').append($('<option>', {
                              value: 'other',
                              text: '<%=t.front_end_reservation.another_place%>' + ' (' + selectorModel.customPlacePrice + '.00€)'
                          }));
                      }
                      else {
                          $('#pickup_place').append($('<option>', {
                              value: 'other',
                              text: '<%=t.front_end_reservation.another_place%>'
                          }));
                      }
                  }
                	$('#pickup_place.selectpicker').selectpicker();
                  $('#pickup_place.selectpicker').selectpicker('refresh');
                  $('#pickup_place').trigger('change');
                  selectorView.loadReturnPlaces();
                } );

        if (selectorModel.allowCustomPlaces || selectorModel.pickupReturnPlacesSameRentalLocation) {
            $('#pickup_place').bind('change', function() {
               selectorController.pickupPlaceChanged();
            });
        }
        

  	},


    loadReturnPlaces: function() {

        var returnPlacesURL = '/api/booking/frontend/return-places';
        if (selectorModel.requestLanguage != null) {
            returnPlacesURL += '?lang='+selectorModel.requestLanguage;
        }

        selectorModel.dataSourceReturnPlaces = new RemoteDataSource(returnPlacesURL,
                                                          {'id':'id',
                                                           'description':function(data) {
                                                               var value = data.name;
                                                               if (data.price && data.price > 0) {
                                                                   value += ' (';
                                                                   value += new Number(data.price).toFixed(2) + '€';
                                                                   value += ')';
                                                               }
                                                               return value;
                                                           }});

        var dataAvailableListener = function(event) {
           selectorModel.dataSourceReturnPlaces.removeListener('data_available', dataAvailableListener); 
           if (selectorModel.pickupReturnPlacesSameRentalLocation) {
             var pickupPlace = selectorModel.dataSourcePickupPlaces.data.find(function(element){
                return $('#pickup_place').val() == element.id;
             });
             var returnPlaces = selectorModel.dataSourceReturnPlaces.data.filter(function(element){
               return element.rental_location_code == pickupPlace.rental_location_code
             });
             dataSource = new MemoryDataSource(returnPlaces, {'id':'id',
                                                             'description':function(data) {
                                                                 var value = data.name;
                                                                 if (data.price && data.price > 0) {
                                                                     value += ' (';
                                                                     value += new Number(data.price).toFixed(2) + '€';
                                                                     value += ')';
                                                                 }
                                                                 return value;
                                                             }});
             selectorView.setupReturnPlaceSelector(dataSource);
           }
           else {
             selectorView.setupReturnPlaceSelector(selectorModel.dataSourceReturnPlaces);
           }
        };

        selectorModel.dataSourceReturnPlaces.addListener('data_available', dataAvailableListener);
        selectorModel.dataSourceReturnPlaces.retrieveData();

    },

    setupReturnPlaceSelector: function(dataSource) {

        if (selectorModel.returnPlace != null) {
          selectorModel.returnPlace.stop();
        }

        if (selectorModel.allowCustomPlaces) {
            $('#return_place').bind('change', function() {
                selectorController.returnPlaceChanged();
            });
        }

        selectorModel.returnPlace = new SelectSelector('return_place', 
            dataSource, null, false, '',
                function() {
                  if (selectorModel.allowCustomPlaces) {
                      if (selectorModel.customPlacePrice && selectorModel.customPlacePrice > 0) {
                          $('#return_place').append($('<option>', {
                              value: 'other',
                              text: '<%=t.front_end_reservation.another_place%>' + ' (' + selectorModel.customPlacePrice + '.00€)'
                          }));
                      }
                      else {
                          $('#return_place').append($('<option>', {
                              value: 'other',
                              text: '<%=t.front_end_reservation.another_place%>'
                          }));
                      }
                  }
                  $('#return_place.selectpicker').selectpicker();
                  $('#return_place.selectpicker').selectpicker('refresh');
                  $('#return_place').trigger('change');
                } );

    },

  	loadPickupReturnTime: function() {

        var dataSourcePickupReturnTime = new RemoteDataSource('/api/booking/frontend/pickup-return-times',
																						{
        	  																	id: function(data){return data;},
																							description: function(data){return data;}
																						});

        var pickupTime = new SelectSelector('time_from', 
        		dataSourcePickupReturnTime, '10:00', false, '',
                function() { 
                	$('#time_from.selectpicker').selectpicker();
					        $('#time_from').val('10:00');
					        $('#time_from.selectpicker').selectpicker('refresh');
					        $('#time_from').trigger('change');
                } );             
        var returnTime = new SelectSelector('time_to', 
        		dataSourcePickupReturnTime, '10:00', false, '',
                function() { 
                	$('#time_to.selectpicker').selectpicker();
					        $('#time_to').val('10:00');
					        $('#time_to.selectpicker').selectpicker('refresh');
					        $('#time_to').trigger('change');
                } );  

  	}

  };

  selectorView.init();

});

</script>
